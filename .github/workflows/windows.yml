name: windows

on:
  pull_request:
  push:

jobs:
  build_thyme_windows_msvc:
    runs-on: windows-2019
    strategy:
      matrix:
        standalone: [ON, OFF]
        platform: [x86, amd64]
        exclude:
          - {standalone: "OFF", platform: amd64}
          
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'   
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
        
    - uses: ilammy/msvc-dev-cmd@v1.4.1
      with:
        arch: ${{ matrix.platform }}
    
    - name: Install dependencies
      shell: bash
      run: |
        curl -L -O https://github.com/ninja-build/ninja/releases/download/v1.10.1/ninja-win.zip
        7z x ninja-win.zip -o`pwd`/deps/ninja
        export PATH=`pwd`/deps/ninja:$PATH
        ninja --version
        
    - name: Build Thyme
      run: |
        cmake -G Ninja -DSTANDALONE=${{ matrix.standalone }} -DUSE_CRASHPAD=${{ matrix.standalone }} -B build
        cmake --build build --config Release

    - name: Create archives
      shell: bash
      id: mkarc
      run: |
        mkdir artifact
        export ZIPNAME=thyme_${{ matrix.platform }}
        if [ ${{ matrix.standalone }} != "ON" ]; then export FEATURES=_dll export EXTENSION=dll; else export FEATURES=_standalone export EXTENSION=exe;fi
        7z a artifact/$ZIPNAME$FEATURES.zip ./build/thyme.$EXTENSION
        if [ ${{ matrix.standalone }} != "ON" ]; then 7z a artifact/$ZIPNAME$FEATURES.zip ./build/thymelauncher.exe; else 7z a artifact/$ZIPNAME$FEATURES.zip ./build/thymecrashhandler.exe; fi
        if [ Release == "Debug" ]; then 7z a artifact/$ZIPNAME$FEATURES.zip ./build/thyme.pdb; fi
        
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: thyme
        path: artifact
        
    - name: Upload development release
      if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/develop' }}
      uses: softprops/action-gh-release@v1
      with:
        name: Development Build
        tag_name: "latest"
        prerelease: true
        files: |
          artifact\*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload tagged release
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifact\*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
